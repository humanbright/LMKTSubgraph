type MktPurchased @entity(immutable: true) {
  id: Bytes!
  buyer: Bytes! # address
  token: Bytes! # address
  tokenIn: BigInt! # uint256
  tokenOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MktSold @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  token: Bytes! # address
  tokenIn: BigInt! # uint256
  tokenOut: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollateralWhitelisted @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  isWhitelisted: Boolean!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CommerceFeeReceived @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  amount: BigInt! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PriceFeedSet @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  feed: Bytes! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenQueryIdSet @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  query: Bytes! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MktPrice @entity(immutable: true) {
  id: Bytes!
  tokenAmount: BigInt! 
  collateralAmount: BigInt! 
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}